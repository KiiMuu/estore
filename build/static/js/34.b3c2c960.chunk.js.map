{"version":3,"sources":["pages/auth/Login.js","themes/spaces.js","themes/breakpoints.js","themes/mixins.js","hooks/useUserHook.js","themes/fonts.js","pages/auth/validate.js","pages/auth/styles.js","../node_modules/@ant-design/icons-svg/es/asn/KeyOutlined.js","../node_modules/@ant-design/icons/es/icons/KeyOutlined.js","hooks/useProtectRoute.js"],"names":["Text","Typography","Login","history","useState","email","setEmail","password","setPassword","dispatch","useDispatch","useProtectRoute","xs","lg","level","type","onSubmit","e","preventDefault","isFormValid","login","content","trigger","inputMode","value","placeholder","onChange","target","to","orientation","onClick","googleLogin","block","icon","headerHeight","topSpace","boxPadding","marginTopBox","marginBottomBox","registerBoxQuery","addButtonQuery","layoutQuery","adminSiderQuery","productActionsQuery","formSearchQuery","HomePreviewQuery","linkHover","lightColor","primaryColor","headingStyle","primaryDarkColor","inputIcon","inputLabel","useUserHook","userInfo","useSelector","state","user","defaultFontSize","descFontSize","isFormEmpty","errorAlert","length","isValidPassword","isEmailValid","Title","ImageWrapper","styled","div","StyledImg","props","location","FormWrapper","Content","CompleteContent","StyledTitle","StyledForm","form","InputControl","StyledInput","input","StyledButton","button","StyledActions","KeyOutlined","ref","React","AntdIcon","Object","assign","KeyOutlinedSvg","displayName","useHistory","useEffect","token","push"],"mappings":"qUAoCIA,EACAC,IADAD,KAyFWE,UAtFD,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EAEDC,mBAAS,IAFR,mBAEpBC,EAFoB,KAEbC,EAFa,OAGKF,mBAAS,IAHd,mBAGpBG,EAHoB,KAGVC,EAHU,KAKrBC,EAAWC,cAUjBC,cAIA,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAjB,SACI,cAAC,IAAD,UACI,cAAC,IAAD,QAGR,cAAC,IAAD,CAAKD,GAAI,GAAIC,GAAI,EAAjB,SACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAaC,MAAO,EAApB,mBAGA,cAACd,EAAD,CAAMe,KAAK,YAAX,iCAGA,eAAC,IAAD,CAAYC,SA5BX,SAAAC,GACjBA,EAAEC,iBAEEC,YAAYd,EAAOE,IACnBE,EAASW,YAAMf,EAAOE,EAAUJ,KAwBpB,UACI,cAAC,IAAD,CACIkB,QAAQ,4CACRC,QAAQ,QAFZ,SAGI,eAAC,IAAD,WACI,+BAAM,cAAC,IAAD,MACN,cAAC,IAAD,CACIP,KAAK,QACLQ,UAAU,QACVC,MAAOnB,EACPoB,YAAY,kBACZC,SAAU,SAAAT,GAAC,OAAIX,EAASW,EAAEU,OAAOH,eAI7C,cAAC,IAAD,CACIH,QAAQ,yBACRC,QAAQ,QAFZ,SAGI,eAAC,IAAD,WACI,+BAAM,cAAC,IAAD,MACN,cAAC,IAAD,CACIP,KAAK,WACLQ,UAAU,WACVC,MAAOjB,EACPkB,YAAY,qBACZC,SAAU,SAAAT,GAAC,OAAIT,EAAYS,EAAEU,OAAOH,eAIhD,eAAC,IAAD,WACI,cAAC,IAAD,CAAcT,KAAK,SAAnB,mBAGA,cAAC,IAAD,CAAMa,GAAG,mBAAT,iCAEJ,cAAC,IAAD,CAASC,YAAY,SAArB,2BACA,cAAC,IAAD,CACIC,QAvDJ,kBAAMrB,EAASsB,YAAY5B,KAwDvBY,KAAK,SACLiB,OAAK,EACLC,KAAM,cAAC,IAAD,IAJV,mC,iCC9G5B,0KACO,IAAMC,EAAe,SACfC,EAAW,QACXC,EAAa,SACbC,EAAe,OACfC,EAAkB,Q,iCCL/B,8OAAO,IAAMC,EAAmB,WAC5B,MAAM,wJASGC,EAAiB,WAC1B,MAAM,+GAOGC,EAAc,WACvB,MAAM,sGAOGC,EAAkB,WAC3B,MAAM,sGAOGC,EAAsB,WAC/B,MAAM,8LAUGC,EAAkB,WAC3B,MAAM,sGAOGC,EAAmB,WAC5B,MAAM,oG,iCCtDV,oJAMaC,EAAY,WACrB,MAAM,8VAAN,OAY4BC,IAZ5B,4LAkBiBC,IAlBjB,2MA8BSC,EAAe,WACxB,MAAM,qFAAN,OAGUD,IAHV,2BAIUE,IAJV,uJAaSC,EAAY,WACrB,MAAM,0KAAN,OAMiBH,IANjB,mlBA0BgCA,IA1BhC,iOAuCSI,EAAa,WACtB,MAAM,oZAAN,OAc0CF,IAd1C,kDAekCF,IAflC,mH,qDCnFWK,IAPK,WAIhB,MAAO,CAAEC,SAHQC,aAAY,SAAAC,GAAK,sBAAUA,MAApCC,KACAH,Y,iCCJZ,oEAAO,IAAMI,EAAkB,SAClBC,EAAe,U,iCCD5B,gFAcaxC,EAAc,SAACd,EAAOE,GAC/B,GAbgB,SAACF,EAAOE,GACxB,OAAQF,IAAUE,EAYdqD,CAAYvD,EAAOE,GACnBsD,YAAW,0BAA2B,OACnC,IAXa,SAAAtD,GACpB,QAAIA,EAASuD,OAAS,GAUVC,CAAgBxD,GAGxB,OAAO,EAFPsD,YAAW,8CAA+C,KAMrDG,EAAe,SAAA3D,GACxB,GAAKA,EAGD,OAAO,EAFPwD,YAAW,iCAAkC,K,sfCfjDI,E,OACAhE,EADAgE,MAISC,EAAeC,IAAOC,IAAV,gDAIZC,EAAYF,IAAOC,IAAV,+SAGE,SAAAE,GAAK,MAAuB,cAAnBA,EAAMC,SAA2B,4BAA8B,2BAMxEvB,KAGXwB,EAAcL,IAAOC,IAAV,mEAETjC,KAGFsC,EAAUN,IAAOC,IAAV,kDAIPM,EAAkBP,IAAOC,IAAV,2MACbhC,IAITG,KAGOoC,EAAcR,YAAOF,EAAPE,CAAH,uNAIdlB,KAKG2B,EAAaT,IAAOU,KAAV,qDAIVC,EAAeX,IAAOC,IAAV,+NAYZW,EAAcZ,IAAOa,MAAV,yWASPrB,IAGOX,IACcA,KAIzBiC,EAAed,IAAOe,OAAV,+OAMnBpC,IAEsBE,IAGXD,KAIJoC,EAAgBhB,IAAOC,IAAV,+J,4CCvGXgB,EADG,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,2nBAA+nB,KAAQ,MAAO,MAAS,Y,QCK5yBA,EAAc,SAAqBd,EAAOe,GAC5C,OAAoBC,gBAAoBC,IAAUC,OAAOC,OAAO,GAAInB,EAAO,CACzEe,IAAKA,EACLpD,KAAMyD,MAIVN,EAAYO,YAAc,cACEL,iBAAiBF,I,iCCd7C,4BAmBezE,IAfS,WACpB,IAAMR,EAAUyF,cACRtC,EAAaD,cAAbC,SAERuC,qBAAU,WACS1F,EAAQoE,SAASf,QAK5B,OAAIF,QAAJ,IAAIA,OAAJ,EAAIA,EAAUwC,QAAO3F,EAAQ4F,KAAK,OAEvC,CAACzC,EAAUnD","file":"static/js/34.b3c2c960.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { isFormValid } from './validate';\r\nimport useProtectRoute from '../../hooks/useProtectRoute';\r\nimport { login, googleLogin } from '../../state/actions/user';\r\n\r\n// styles\r\nimport {\r\n    ImageWrapper,\r\n    FormWrapper,\r\n    StyledImg,\r\n    StyledTitle,\r\n    StyledForm,\r\n    StyledInput,\r\n    StyledButton,\r\n    Content,\r\n    InputControl,\r\n    StyledActions,\r\n} from './styles';\r\n\r\n// @antd\r\nimport Row from 'antd/lib/row';\r\nimport Col from 'antd/lib/col';\r\nimport Typography from 'antd/lib/typography';\r\nimport Divider from 'antd/lib/divider';\r\nimport Button from 'antd/lib/button';\r\nimport Popover from 'antd/lib/popover';\r\n\r\nimport {\r\n    UserAddOutlined,\r\n    KeyOutlined,\r\n    GoogleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst {\r\n    Text\r\n} = Typography;\r\n\r\nconst Login = ({ history }) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (isFormValid(email, password)) {\r\n            dispatch(login(email, password, history));\r\n        }\r\n    }\r\n    \r\n    useProtectRoute();\r\n\r\n    const googelLoginAuth = () => dispatch(googleLogin(history));\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={24} lg={18}>\r\n                <ImageWrapper>\r\n                    <StyledImg></StyledImg>\r\n                </ImageWrapper>\r\n            </Col>\r\n            <Col xs={24} lg={6}>\r\n                <FormWrapper>\r\n                    <Content>\r\n                        <StyledTitle level={3}>\r\n                            Login\r\n                        </StyledTitle>\r\n                        <Text type='secondary'>\r\n                            Welcome back, login\r\n                        </Text>\r\n                        <StyledForm onSubmit={handleSubmit}>\r\n                            <Popover\r\n                                content='Try Admin User: karimmuhamadfci@gmail.com'\r\n                                trigger='focus'>\r\n                                <InputControl>\r\n                                    <span><UserAddOutlined /></span>\r\n                                    <StyledInput\r\n                                        type='email'\r\n                                        inputMode='email'\r\n                                        value={email}\r\n                                        placeholder='Type your email'\r\n                                        onChange={e => setEmail(e.target.value)}  \r\n                                    />\r\n                                </InputControl>\r\n                            </Popover>\r\n                            <Popover\r\n                                content='Admin Password: 000000'\r\n                                trigger='focus'>\r\n                                <InputControl>\r\n                                    <span><KeyOutlined /></span>\r\n                                    <StyledInput\r\n                                        type='password'\r\n                                        inputMode='password'\r\n                                        value={password}\r\n                                        placeholder='Type your password'\r\n                                        onChange={e => setPassword(e.target.value)}  \r\n                                    />\r\n                                </InputControl>\r\n                            </Popover>\r\n                            <StyledActions>\r\n                                <StyledButton type='submit'>\r\n                                    Login\r\n                                </StyledButton>\r\n                                <Link to='/password/forgot'>Forgot password?</Link>\r\n                            </StyledActions>\r\n                            <Divider orientation='center'>OR LOGIN WITH</Divider>\r\n                            <Button \r\n                                onClick={googelLoginAuth} \r\n                                type='danger'\r\n                                block\r\n                                icon={<GoogleOutlined />}>\r\n                                Google\r\n                            </Button>\r\n                        </StyledForm>\r\n                    </Content>\r\n                </FormWrapper>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Login;","// header\r\nexport const headerHeight = '6.5rem';\r\nexport const topSpace = '10rem';\r\nexport const boxPadding = '3.5rem';\r\nexport const marginTopBox = '2rem';\r\nexport const marginBottomBox = '2rem';\r\n// line heights\r\nexport const descLineHeight = '1.8';","export const registerBoxQuery = () => {\r\n    return `\r\n        @media screen and (max-width: 500px) {\r\n            border: none;\r\n            box-shadow: none;\r\n            padding: 0;\r\n        }\r\n    `;\r\n}\r\n\r\nexport const addButtonQuery = () => {\r\n    return `\r\n        @media screen and (max-width: 576px) {\r\n            justify-content: flex-start;\r\n        }\r\n    `;\r\n}\r\n\r\nexport const layoutQuery = () => {\r\n    return `\r\n        @media screen and (min-width: 768px) {\r\n            margin-left: 25rem;\r\n        }\r\n    `;\r\n}\r\n\r\nexport const adminSiderQuery = () => {\r\n    return `\r\n        @media screen and (min-width: 768px) {\r\n            margin-left: 20rem;\r\n        }\r\n    `;\r\n}\r\n\r\nexport const productActionsQuery = () => {\r\n    return `\r\n        @media screen and (max-width: 1200px) {\r\n            &:not(:first-child) {\r\n                margin-bottom: 0;\r\n            }\r\n            margin-bottom: .5rem;\r\n        }\r\n    `;\r\n}\r\n\r\nexport const formSearchQuery = () => {\r\n    return `\r\n        @media screen and (min-width: 768px) {\r\n            margin-top: 1.3rem;\r\n        }\r\n    `;\r\n}\r\n\r\nexport const HomePreviewQuery = () => {\r\n    return `\r\n        @media screen and (max-width: 768px) {\r\n            font-size: 2rem;\r\n        }\r\n    `;\r\n}","import { \r\n    lightColor, \r\n    primaryColor, \r\n    primaryDarkColor \r\n} from './colors';\r\n\r\nexport const linkHover = () => {\r\n    return `\r\n        position: relative;\r\n        transition: transform .15s ease-in-out;\r\n        &::before {\r\n            content: '';\r\n            position: absolute;\r\n            z-index: -1;\r\n            top: 0;\r\n            right: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            transform: scale(0);\r\n            background-color: ${lightColor};\r\n            border-radius: 3px;\r\n            transition: transform .15s ease-in-out;\r\n            transform-origin: center;\r\n        }\r\n        &:hover {\r\n            color: ${primaryColor};\r\n        }\r\n        &:hover::before {\r\n            transform: scale(1);\r\n            transform-origin: top right;\r\n        }\r\n        &:active {\r\n            transform: scale(.9);\r\n        }\r\n    `;\r\n}\r\n\r\nexport const headingStyle = () => {\r\n    return `\r\n        background-image: linear-gradient(\r\n            to right, \r\n            ${primaryColor}, \r\n            ${primaryDarkColor}\r\n        );\r\n        -webkit-background-clip: text;\r\n        background-clip: text;\r\n        color: transparent;\r\n        font-weight: 900;\r\n    `\r\n}\r\n\r\nexport const inputIcon = () => {\r\n    return `\r\n        position: relative;\r\n        span {\r\n            position: absolute;\r\n            top: 50%;\r\n            transform: translate(0%, -50%);\r\n            color: ${primaryColor};\r\n        }\r\n        input {\r\n            padding-left: 3rem;\r\n            border: .2rem solid;\r\n            border-color: transparent transparent #ddd transparent;\r\n            outline: none;\r\n            width: 100%;\r\n            height: 5rem;\r\n            background-color: #fff;\r\n            border-radius: 0;\r\n        }\r\n        strong {\r\n            &:after {\r\n                content: '';\r\n                position: absolute;\r\n                bottom: 0;\r\n                left: 50%;\r\n                width: 0;\r\n                height: .2rem;\r\n                background-color: ${primaryColor};\r\n                transition: all .3s ease-in-out;\r\n            }\r\n        }\r\n        input:focus + strong {\r\n            &:after {\r\n                width: 100%;\r\n                left: 0;\r\n            }\r\n        }\r\n    `;\r\n}\r\n\r\nexport const inputLabel = () => {\r\n    return `\r\n        label {\r\n            display: block;\r\n            color: #000;\r\n            font-weight: 500;\r\n            margin-bottom: .2rem;\r\n        }\r\n        input {\r\n            width: 100%;\r\n            outline: none;\r\n            height: 4rem;\r\n            padding-left: 1rem;\r\n            border: .1rem solid rgba(0 0 0 / 10%);\r\n            &:focus {\r\n                box-shadow: 0 0 .1rem .1rem ${primaryDarkColor};\r\n                border: .1rem solid ${primaryColor};\r\n                transition: all .15s cubic-bezier(0.25, 0.46, 0.45, 0.94);\r\n            }\r\n        }\r\n    `;\r\n}","import { useSelector } from 'react-redux';\r\n\r\nconst useUserHook = () => {\r\n    const { user } = useSelector(state => ({ ...state }));\r\n    const { userInfo } = user;\r\n\r\n    return { userInfo }\r\n}\r\n\r\nexport default useUserHook;","export const defaultFontSize = '1.6rem';\r\nexport const descFontSize = '1.4rem';\r\nexport const mainHeadFontSize = '2.8rem';","import errorAlert from '../../components/layout/message/errorAlert';\r\n\r\nconst isFormEmpty = (email, password) => {\r\n    return !email || !password;\r\n}\r\n\r\nconst isValidPassword = password => {\r\n    if (password.length < 6) {\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport const isFormValid = (email, password) => {\r\n    if (isFormEmpty(email, password)) {\r\n        errorAlert('All fields are required', 3);\r\n    } else if (!isValidPassword(password)) {\r\n        errorAlert('Password must be at least 6 characters long', 3);\r\n    } else {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport const isEmailValid = email => {\r\n    if (!email) {\r\n        errorAlert('Please type your email address', 3);\r\n    } else {\r\n        return true;\r\n    }\r\n}","import styled from 'styled-components';\r\nimport { lightColor, primaryColor } from '../../themes/colors';\r\nimport { descFontSize } from '../../themes/fonts';\r\nimport { boxPadding, topSpace } from '../../themes/spaces';\r\nimport { headingStyle, linkHover } from '../../themes/mixins';\r\nimport { registerBoxQuery } from '../../themes/breakpoints';\r\n\r\n// @antd\r\nimport Typography from 'antd/lib/typography';\r\n\r\nconst {\r\n    Title,\r\n} = Typography;\r\n\r\n\r\nexport const ImageWrapper = styled.div`\r\n    height: 100vh;\r\n`;\r\n\r\nexport const StyledImg = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: ${props => props.location === '/register' ? \"url('/auth/register.svg')\" : \"url('/auth/login.svg')\"};\r\n    background-size: contain;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    position: relative;\r\n    clip-path: polygon(0 0, 100% 0, 100% 95vh, 0 100%);\r\n    background-color: ${primaryColor};\r\n`;\r\n\r\nexport const FormWrapper = styled.div`\r\n    height: 100%;\r\n    padding: ${topSpace} 0;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    padding: 0 2rem;\r\n`;\r\n\r\nexport const CompleteContent = styled.div`\r\n    padding: ${boxPadding};\r\n    background-color: #fff;\r\n    border: 1px solid #ddd;\r\n    box-shadow: 0 .5rem 1rem rgba(154,160,185,.05), 0 1.5rem 4rem rgba(166,173,201,.2);\r\n    ${registerBoxQuery};\r\n`;\r\n\r\nexport const StyledTitle = styled(Title)`\r\n    // for higher specifity;\r\n    // You can use as many & as you want, the more you use the higher the specificity will be!\r\n    && {\r\n        ${headingStyle};\r\n        margin-bottom: .5rem;\r\n    }\r\n`;\r\n\r\nexport const StyledForm = styled.form`\r\n    margin-top: 2.5rem;\r\n`;\r\n\r\nexport const InputControl = styled.div`\r\n    position: relative;\r\n    span {\r\n        position: absolute;\r\n        top: 50%;\r\n        transform: translate(50%, -50%);\r\n    }\r\n    &:not(:first-child) {\r\n        margin-top: 1rem;\r\n    }\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n    display: block;\r\n    width: 100%;\r\n    height: 5rem;\r\n    padding-left: 3rem;\r\n    margin-bottom: 1.5rem;\r\n    outline: none;\r\n    border: 1px solid #ddd;\r\n    background-color: #fff;\r\n    font-size: ${descFontSize};\r\n    transition: all .15s ease;\r\n    &:focus {\r\n        border-color: ${primaryColor};\r\n        box-shadow: 0 0 .5rem .1rem ${primaryColor};\r\n    }\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n    padding: 1rem 3rem;\r\n    border: none;\r\n    cursor: pointer;\r\n    outline: none;\r\n    z-index: 1;\r\n    ${linkHover};\r\n    &::before {\r\n        background-color: ${primaryColor};\r\n    }\r\n    &:hover {\r\n        color: ${lightColor};\r\n    }\r\n`;\r\n\r\nexport const StyledActions = styled.div`\r\n    margin-top: 1.5rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n`;","// This icon file is generated automatically.\nvar KeyOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M608 112c-167.9 0-304 136.1-304 304 0 70.3 23.9 135 63.9 186.5l-41.1 41.1-62.3-62.3a8.15 8.15 0 00-11.4 0l-39.8 39.8a8.15 8.15 0 000 11.4l62.3 62.3-44.9 44.9-62.3-62.3a8.15 8.15 0 00-11.4 0l-39.8 39.8a8.15 8.15 0 000 11.4l62.3 62.3-65.3 65.3a8.03 8.03 0 000 11.3l42.3 42.3c3.1 3.1 8.2 3.1 11.3 0l253.6-253.6A304.06 304.06 0 00608 720c167.9 0 304-136.1 304-304S775.9 112 608 112zm161.2 465.2C726.2 620.3 668.9 644 608 644c-60.9 0-118.2-23.7-161.2-66.8-43.1-43-66.8-100.3-66.8-161.2 0-60.9 23.7-118.2 66.8-161.2 43-43.1 100.3-66.8 161.2-66.8 60.9 0 118.2 23.7 161.2 66.8 43.1 43 66.8 100.3 66.8 161.2 0 60.9-23.7 118.2-66.8 161.2z\" } }] }, \"name\": \"key\", \"theme\": \"outlined\" };\nexport default KeyOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport KeyOutlinedSvg from \"@ant-design/icons-svg/es/asn/KeyOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar KeyOutlined = function KeyOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: KeyOutlinedSvg\n  }));\n};\n\nKeyOutlined.displayName = 'KeyOutlined';\nexport default /*#__PURE__*/React.forwardRef(KeyOutlined);","import { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useUserHook from './useUserHook';\r\n\r\nconst useProtectRoute = () => {\r\n    const history = useHistory();\r\n    const { userInfo } = useUserHook();\r\n\r\n    useEffect(() => {\r\n        let intended = history.location.state;\r\n\r\n        if (intended) {\r\n            return;\r\n        } else {\r\n            if (userInfo?.token) history.push('/');\r\n        }\r\n    }, [userInfo, history]);\r\n}\r\n\r\nexport default useProtectRoute;"],"sourceRoot":""}