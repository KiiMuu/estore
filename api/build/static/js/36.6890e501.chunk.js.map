{"version":3,"sources":["components/stripe/styles.js","components/stripe/StripeCheckout.js","state/actions/stripe.js","pages/payment/styles.js","pages/payment/Payment.js","themes/spaces.js","hooks/useUserHook.js","components/layout/message/successAlert.js","state/actions/cart.js","state/actions/order.js"],"names":["StripeForm","styled","form","StripeCheckout","history","useState","succeeded","setSucceeded","processing","setProcessing","disabled","setDisabled","error","setError","dispatch","useDispatch","userInfo","useUserHook","paymentInfo","useSelector","state","stripePaymentIntent","loading","clientSecret","cartTotal","payable","totalAfterDiscount","isCouponApplied","orderCreate","orderError","order","stripe","useStripe","elements","useElements","useEffect","authtoken","a","type","STRIPE_REQUEST","config","headers","axios","post","data","STRIPE_SUCCESS","payload","STRIPE_FAIL","response","message","payWithStripe","token","handleChange","e","empty","handleSubmit","preventDefault","confirmCardPayment","payment_method","card","getElement","CardElement","billing_details","name","target","value","createOrder","successAlert","errorAlert","ok","window","localStorage","removeItem","ADD_TO_CART","removeUserCart","xs","undefined","showIcon","justify","style","margin","direction","LoadingOutlined","color","DollarOutlined","CheckSquareOutlined","toFixed","id","className","onSubmit","options","base","fontSize","invalid","iconColor","onChange","SubHeading","h3","darkColor","ImageWrapper","div","StyledImg","headerHeight","FormWrapper","topSpace","Content","stripePromise","loadStripe","process","Payment","lg","boxPadding","marginTopBox","marginBottomBox","user","msgText","duration","success","content","checkoutProceed","cart","PROCEED_CHECKOUT_REQUEST","PROCEED_CHECKOUT_SUCCESS","PROCEED_CHECKOUT_FAIL","getUserCart","GET_USER_CART_REQUEST","get","GET_USER_CART_SUCCESS","GET_USER_CART_FAIL","DELETE_USER_CART_REQUEST","put","DELETE_USER_CART_SUCCESS","DELETE_USER_CART_FAIL","saveUserAddress","address","DELIVERY_ADDRESS_REQUEST","DELIVERY_ADDRESS_SUCCESS","DELIVERY_ADDRESS_FAIL","stripeResponse","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","getUserOrders","USER_ORDERS_LIST_REQUEST","USER_ORDERS_LIST_SUCCESS","USER_ORDERS_LIST_FAIL","createCashOnDeliveryOrder","isCashOnDelivery","COD_ORDER_CREATE_REQUEST","COD_ORDER_CREATE_SUCCESS","COD_ORDER_CREATE_FAIL"],"mappings":"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","file":"static/js/36.6890e501.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const StripeForm = styled.form`\r\n    /* height: 15rem;\r\n    background: #fff;\r\n    padding: 2rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    border-radius: .3rem;\r\n    box-shadow: 0 0 .5rem .6rem rgba(0 0 0 / 5%); */\r\n`;","import { Fragment, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    CardElement,\r\n    useStripe,\r\n    useElements,\r\n} from '@stripe/react-stripe-js';\r\nimport { payWithStripe } from '../../state/actions/stripe';\r\nimport { createOrder } from '../../state/actions/order';\r\nimport { removeUserCart } from '../../state/actions/cart';\r\nimport useUserHook from '../../hooks/useUserHook';\r\nimport errorAlert from '../../components/layout/message/errorAlert';\r\nimport successAlert from '../../components/layout/message/successAlert';\r\nimport { ADD_TO_CART } from '../../state/constants/cart';\r\n\r\n// * styles\r\nimport { StripeForm } from './styles';\r\n\r\n// * @antd\r\nimport Row from 'antd/lib/row';\r\nimport Col from 'antd/lib/col';\r\nimport Space from 'antd/lib/space';\r\nimport Tag from 'antd/lib/tag';\r\nimport Alert from 'antd/lib/alert';\r\nimport {\r\n    DollarOutlined,\r\n    CheckSquareOutlined,\r\n    LoadingOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst StripeCheckout = ({ history }) => {\r\n    const [succeeded, setSucceeded] = useState(false);\r\n    const [processing, setProcessing] = useState(false);\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const { userInfo } = useUserHook();\r\n\r\n    // * stripe state\r\n    const paymentInfo = useSelector(state => state.stripePaymentIntent);\r\n    const { \r\n        loading,\r\n        clientSecret, \r\n        cartTotal, \r\n        payable, \r\n        totalAfterDiscount \r\n    } = paymentInfo;\r\n\r\n    // * coupon state\r\n    const isCouponApplied = useSelector(state => state.isCouponApplied);\r\n\r\n    // * order state\r\n    const {\r\n        error: orderError,\r\n        order,\r\n    } = useSelector(state => state.orderCreate);\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    useEffect(() => {\r\n        dispatch(payWithStripe(userInfo?.token, isCouponApplied))\r\n    }, [dispatch, userInfo, isCouponApplied]);\r\n\r\n    const handleChange = async e => {\r\n        setDisabled(e.empty);\r\n        setError(e.error ? e.error.message: '');\r\n    }\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        setProcessing(true);\r\n\r\n        const payload = await stripe.confirmCardPayment(clientSecret, {\r\n            payment_method: {\r\n                card: elements.getElement(CardElement),\r\n                billing_details: {\r\n                    name: e.target.name.value,\r\n                },\r\n            },\r\n        });\r\n\r\n        if (payload.error) {\r\n            setError(`Payment Failed: ${payload.error.message}`);\r\n            setProcessing(false);\r\n        } else {\r\n            dispatch(createOrder(payload, userInfo?.token));\r\n            setError(null);\r\n            setProcessing(false);\r\n            setSucceeded(true);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (succeeded) {\r\n            successAlert('Payment done successfully!. See it in your purchase history')\r\n        }\r\n\r\n        if (error) {\r\n            errorAlert(error);\r\n        }\r\n    }, [succeeded, error]);\r\n\r\n    useEffect(() => {\r\n        if (order?.ok) { // * if order created, empty user cart\r\n            if (typeof window !== 'undefined') localStorage.removeItem('userCart');\r\n\r\n            dispatch({\r\n                type: ADD_TO_CART,\r\n                payload: [],\r\n            });\r\n\r\n            dispatch({\r\n                type: isCouponApplied,\r\n                payload: false,\r\n            });\r\n\r\n            dispatch(removeUserCart(userInfo?.token));\r\n        }\r\n\r\n        if (orderError) {\r\n            errorAlert(orderError);\r\n        }\r\n    }, [dispatch, order, orderError, isCouponApplied, userInfo]);\r\n\r\n    const cardStyle = {\r\n        style: {\r\n            base: {\r\n                color: '#262626',\r\n                fontSize: '13px',\r\n                '::placeholder': {\r\n                    color: '#32325d',\r\n                },\r\n            },\r\n            invalid: {\r\n                color: '#fa755a',\r\n                iconColor: 'fa755a',\r\n            },\r\n        },\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {!succeeded && (    \r\n                <Row>\r\n                    <Col xs={24}>\r\n                        <Alert message={\r\n                            isCouponApplied && totalAfterDiscount !== undefined ? (\r\n                                <Fragment>\r\n                                    Coupon has been applied, Total after discount: ${totalAfterDiscount}\r\n                                </Fragment>\r\n                            ) : (\r\n                                <Fragment>\r\n                                    No coupon applied\r\n                                </Fragment>\r\n                            )\r\n                        } type={isCouponApplied && totalAfterDiscount !== undefined ? 'success' : 'info'} showIcon />\r\n                    </Col>\r\n                </Row>\r\n            )}\r\n            <Row justify='space-between' style={{ margin: '1rem 0' }}>\r\n                <Col>\r\n                    <Space direction='vertical'>\r\n                        {loading ? <LoadingOutlined /> : <Tag color='blue'><DollarOutlined /> {`Total: $${cartTotal}`}</Tag>}\r\n                    </Space>\r\n                </Col>\r\n                <Col>\r\n                    <Space direction='vertical'>\r\n                        {loading ? <LoadingOutlined /> : <Tag color='blue'><CheckSquareOutlined /> {`Payable: $${(payable / 100).toFixed(2)}`}</Tag>}\r\n                    </Space>\r\n                </Col>\r\n            </Row>\r\n            <StripeForm \r\n                id='payment-form' \r\n                className='stripe-form' \r\n                onSubmit={handleSubmit}>\r\n                <CardElement\r\n                    id='card-element'\r\n                    options={cardStyle}\r\n                    onChange={handleChange} \r\n                />\r\n                <button\r\n                    className='stripe-button'\r\n                    disabled={succeeded || processing || disabled}\r\n                >\r\n                    <span id='button-text'>\r\n                        {processing ? <div className='spinner' id='spinner'></div> : (\r\n                            loading ? <LoadingOutlined /> : `Pay $${payable}`\r\n                        )}\r\n                    </span>\r\n                </button>\r\n            </StripeForm>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default StripeCheckout;","import axios from 'axios';\r\nimport { \r\n    STRIPE_FAIL, \r\n    STRIPE_REQUEST, \r\n    STRIPE_SUCCESS \r\n} from '../constants/stripe';\r\n\r\nexport const payWithStripe = (authtoken, isCouponApplied) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: STRIPE_REQUEST,\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                authtoken,\r\n            }\r\n        }\r\n    \r\n        const { data } = await axios.post('/api/create-payment-intent', { isCouponApplied }, config);\r\n    \r\n        dispatch({\r\n            type: STRIPE_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: STRIPE_FAIL,\r\n            payload: err.response?.data.message ? err.response.data.message : err.message,\r\n        });\r\n    }\r\n}","import styled from 'styled-components';\r\nimport { headerHeight, topSpace } from '../../themes/spaces';\r\nimport { darkColor } from '../../themes/colors';\r\n\r\nexport const SubHeading = styled.h3`\r\n    text-transform: uppercase;\r\n    color: ${darkColor};\r\n    font-weight: 900;\r\n    font-size: 1.5rem;\r\n    text-align: center;\r\n    margin-bottom: 2.5rem;\r\n`;\r\n\r\nexport const ImageWrapper = styled.div`\r\n    height: 100vh;\r\n`;\r\n\r\nexport const StyledImg = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: url('/payment/payment.svg');\r\n    background-size: contain;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    position: relative;\r\n    margin-top: ${headerHeight};\r\n    box-shadow: 0 0 .2rem .2rem rgba(0 0 0 / 5%);\r\n`;\r\n\r\nexport const FormWrapper = styled.div`\r\n    height: 100%;\r\n    padding: ${topSpace} 0;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    padding: 0 2rem;\r\n`;","import { loadStripe } from '@stripe/stripe-js';\r\nimport { Elements } from '@stripe/react-stripe-js';\r\nimport '../../stripe.css';\r\nimport StripeCheckout from '../../components/stripe/StripeCheckout';\r\n\r\n// * styles\r\nimport {\r\n    ImageWrapper,\r\n    StyledImg, \r\n    SubHeading,\r\n    FormWrapper,\r\n    Content,\r\n} from './styles';\r\n\r\n// * @antd\r\nimport Row from 'antd/lib/row';\r\nimport Col from 'antd/lib/col';\r\nimport { Fragment } from 'react';\r\n\r\n// * load stripe outside component to avoid re-creating stripe obj on every render!\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_KEY);\r\n\r\nconst Payment = () => {\r\n    return (\r\n        <Fragment>\r\n            <Row>\r\n                <Col xs={24} lg={16}>\r\n                    <ImageWrapper>\r\n                        <StyledImg></StyledImg>\r\n                    </ImageWrapper>\r\n                </Col>\r\n                <Col xs={24} lg={8}>\r\n                    <FormWrapper>\r\n                        <Content>\r\n                            <SubHeading>Complete your purchase</SubHeading>\r\n                            <Elements stripe={stripePromise}>\r\n                                <StripeCheckout />\r\n                            </Elements>\r\n                        </Content>\r\n                    </FormWrapper>\r\n                </Col>\r\n            </Row>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Payment;","// header\r\nexport const headerHeight = '6.5rem';\r\nexport const topSpace = '10rem';\r\nexport const boxPadding = '3.5rem';\r\nexport const marginTopBox = '2rem';\r\nexport const marginBottomBox = '2rem';\r\n// line heights\r\nexport const descLineHeight = '1.8';","import { useSelector } from 'react-redux';\r\n\r\nconst useUserHook = () => {\r\n    const { user } = useSelector(state => ({ ...state }));\r\n    const { userInfo } = user;\r\n\r\n    return { userInfo }\r\n}\r\n\r\nexport default useUserHook;","import message from 'antd/lib/message';\r\n\r\nconst successAlert = (msgText, duration = 10) => message.success({\r\n    content: msgText, \r\n    style: {\r\n        fontSize: '1.35rem',\r\n        color: '#262626',\r\n    },\r\n    duration: duration,\r\n});\r\n\r\nexport default successAlert;","import axios from 'axios';\r\nimport { \r\n    DELETE_USER_CART_FAIL,\r\n    DELETE_USER_CART_REQUEST,\r\n    DELETE_USER_CART_SUCCESS,\r\n    DELIVERY_ADDRESS_FAIL,\r\n    DELIVERY_ADDRESS_REQUEST,\r\n    DELIVERY_ADDRESS_SUCCESS,\r\n    GET_USER_CART_FAIL,\r\n    GET_USER_CART_REQUEST,\r\n    GET_USER_CART_SUCCESS,\r\n    PROCEED_CHECKOUT_FAIL,\r\n    PROCEED_CHECKOUT_REQUEST, \r\n    PROCEED_CHECKOUT_SUCCESS,\r\n} from '../constants/cart';\r\n\r\nexport const checkoutProceed = (cart, authtoken) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: PROCEED_CHECKOUT_REQUEST,\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                authtoken,\r\n            }\r\n        }\r\n    \r\n        const { data } = await axios.post('/api/user/cart', { cart }, config);\r\n    \r\n        dispatch({\r\n            type: PROCEED_CHECKOUT_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PROCEED_CHECKOUT_FAIL,\r\n            payload: err.response?.data.message ? err.response.data.message : err.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const getUserCart = authtoken => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: GET_USER_CART_REQUEST,\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                authtoken,\r\n            }\r\n        }\r\n    \r\n        const { data } = await axios.get('/api/user/cart', config);\r\n    \r\n        dispatch({\r\n            type: GET_USER_CART_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_USER_CART_FAIL,\r\n            payload: err.response?.data.message ? err.response.data.message : err.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const removeUserCart = authtoken => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: DELETE_USER_CART_REQUEST,\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                authtoken,\r\n            }\r\n        }\r\n    \r\n        // * at least {} in put request\r\n        const { data } = await axios.put('/api/user/cart', {}, config);\r\n\r\n        dispatch({\r\n            type: DELETE_USER_CART_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: DELETE_USER_CART_FAIL,\r\n            payload: err.response?.data.message ? err.response.data.message : err.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const saveUserAddress = (address, authtoken) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: DELIVERY_ADDRESS_REQUEST,\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                authtoken,\r\n            }\r\n        }\r\n    \r\n        const { data } = await axios.post('/api/user/address', { address }, config);\r\n\r\n        dispatch({\r\n            type: DELIVERY_ADDRESS_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: DELIVERY_ADDRESS_FAIL,\r\n            payload: err.response?.data.message ? err.response.data.message : err.message,\r\n        });\r\n    }\r\n}","import axios from 'axios';\r\nimport { \r\n    COD_ORDER_CREATE_FAIL,\r\n    COD_ORDER_CREATE_REQUEST,\r\n    COD_ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL, \r\n    ORDER_CREATE_REQUEST, \r\n    ORDER_CREATE_SUCCESS, \r\n    USER_ORDERS_LIST_FAIL, \r\n    USER_ORDERS_LIST_REQUEST,\r\n    USER_ORDERS_LIST_SUCCESS\r\n} from '../constants/order';\r\n\r\nexport const createOrder = (stripeResponse, authtoken) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST,\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                authtoken,\r\n            }\r\n        }\r\n    \r\n        const { data } = await axios.post('/api/user/order', { stripeResponse }, config);\r\n    \r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: err.response?.data.message ? err.response.data.message : err.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const getUserOrders = authtoken => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: USER_ORDERS_LIST_REQUEST,\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                authtoken,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get('/api/user/orders', config);\r\n\r\n        dispatch({\r\n            type: USER_ORDERS_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_ORDERS_LIST_FAIL,\r\n            payload: err.response?.data.message ? err.response.data.message : err.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const createCashOnDeliveryOrder = (authtoken, isCashOnDelivery, isCouponApplied) => async dispatch => {\r\n    try {\r\n        dispatch({\r\n            type: COD_ORDER_CREATE_REQUEST,\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                authtoken,\r\n            }\r\n        }\r\n    \r\n        const { data } = await axios.post('/api/user/cash-order', { isCashOnDelivery, isCouponApplied }, config);\r\n    \r\n        dispatch({\r\n            type: COD_ORDER_CREATE_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: COD_ORDER_CREATE_FAIL,\r\n            payload: err.response?.data.message ? err.response.data.message : err.message,\r\n        });\r\n    }\r\n}"],"sourceRoot":""}