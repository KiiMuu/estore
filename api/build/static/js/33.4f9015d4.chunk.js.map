{"version":3,"sources":["pages/auth/Register.js","themes/spaces.js","themes/breakpoints.js","themes/mixins.js","hooks/useUserHook.js","components/layout/message/successAlert.js","themes/fonts.js","pages/auth/validate.js","pages/auth/styles.js","hooks/useProtectRoute.js"],"names":["Text","Typography","Register","history","location","useLocation","dispatch","useDispatch","useState","email","setEmail","useProtectRoute","handleSubmit","e","a","preventDefault","isEmailValid","config","url","process","handleCodeInApp","auth","sendSignInLinkToEmail","then","successAlert","window","localStorage","setItem","catch","err","errorAlert","message","xs","lg","pathname","level","type","onSubmit","content","trigger","inputMode","value","placeholder","onChange","target","orientation","onClick","googleLogin","block","icon","headerHeight","topSpace","boxPadding","marginTopBox","marginBottomBox","registerBoxQuery","addButtonQuery","layoutQuery","adminSiderQuery","productActionsQuery","formSearchQuery","HomePreviewQuery","linkHover","lightColor","primaryColor","headingStyle","primaryDarkColor","inputIcon","inputLabel","useUserHook","userInfo","useSelector","state","user","msgText","duration","success","style","fontSize","color","defaultFontSize","descFontSize","isFormValid","password","isFormEmpty","length","isValidPassword","Title","ImageWrapper","styled","div","StyledImg","props","FormWrapper","Content","CompleteContent","StyledTitle","StyledForm","form","InputControl","StyledInput","input","StyledButton","button","StyledActions","useHistory","useEffect","token","push"],"mappings":"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","file":"static/js/33.4f9015d4.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { auth } from '../../firebase';\r\nimport { isEmailValid } from './validate';\r\nimport successAlert from '../../components/layout/message/successAlert';\r\nimport errorAlert from '../../components/layout/message/errorAlert';\r\nimport useProtectRoute from '../../hooks/useProtectRoute';\r\nimport { googleLogin } from '../../state/actions/user';\r\n\r\n// styles\r\nimport {\r\n    ImageWrapper,\r\n    FormWrapper,\r\n    StyledImg,\r\n    StyledTitle,\r\n    StyledForm,\r\n    StyledInput,\r\n    StyledButton,\r\n    Content,\r\n    InputControl,\r\n} from './styles';\r\n\r\n// @antd\r\nimport Row from 'antd/lib/row';\r\nimport Col from 'antd/lib/col';\r\nimport Typography from 'antd/lib/typography';\r\nimport PopOver from 'antd/lib/popover';\r\nimport Divider from 'antd/lib/divider';\r\nimport Button from 'antd/lib/button';\r\n\r\nimport {\r\n    UserAddOutlined,\r\n    GoogleOutlined,\r\n} from '@ant-design/icons';\r\n\r\nconst {\r\n    Text\r\n} = Typography;\r\n\r\nconst Register = ({ history }) => {\r\n\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n\r\n    const [email, setEmail] = useState('');\r\n\r\n    useProtectRoute();\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n\r\n        if (isEmailValid(email)) {\r\n            // firebase config\r\n            const config = {\r\n                url: process.env.REACT_APP_REGISTER_REDIRECT_URL,\r\n                handleCodeInApp: true\r\n            }\r\n    \r\n            await auth.sendSignInLinkToEmail(email, config).then(() => {\r\n                successAlert(`Email is sent to ${email}. Click the link to complete registration.`);\r\n    \r\n                // save user email in localStorage\r\n                // for non-repeat typing the same email in redirection\r\n                window.localStorage.setItem('registerEmail', email);\r\n        \r\n                setEmail('');\r\n            }).catch(err => {\r\n                errorAlert(err.message);\r\n            });\r\n        }\r\n    }\r\n\r\n    const googelLoginAuth = () => dispatch(googleLogin(history));\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={24} lg={18}>\r\n                <ImageWrapper>\r\n                    <StyledImg location={location.pathname}></StyledImg>\r\n                </ImageWrapper>\r\n            </Col>\r\n            <Col xs={24} lg={6}>\r\n                <FormWrapper>\r\n                    <Content>\r\n                        <StyledTitle level={3}>\r\n                            Register\r\n                        </StyledTitle>\r\n                        <Text type='secondary'>\r\n                            Create a new account\r\n                        </Text>\r\n                        <StyledForm onSubmit={handleSubmit}>\r\n                            <PopOver \r\n                                content='Please make sure you provide a valid email address so you can complete your registration'\r\n                                trigger='focus'>\r\n                                <InputControl>\r\n                                    <span><UserAddOutlined /></span>\r\n                                    <StyledInput\r\n                                        type='email'\r\n                                        inputMode='email'\r\n                                        value={email}\r\n                                        placeholder='Type your email'\r\n                                        onChange={e => setEmail(e.target.value)}  \r\n                                    />\r\n                                </InputControl>\r\n                            </PopOver>\r\n                            <StyledButton type='submit'>Register</StyledButton>\r\n                            <Divider orientation='center'>OR USE</Divider>\r\n                            <Button \r\n                                onClick={googelLoginAuth} \r\n                                type='danger'\r\n                                block\r\n                                icon={<GoogleOutlined />}>\r\n                                Google\r\n                            </Button>\r\n                        </StyledForm>\r\n                    </Content>\r\n                </FormWrapper>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Register;","// header\r\nexport const headerHeight = '6.5rem';\r\nexport const topSpace = '10rem';\r\nexport const boxPadding = '3.5rem';\r\nexport const marginTopBox = '2rem';\r\nexport const marginBottomBox = '2rem';\r\n// line heights\r\nexport const descLineHeight = '1.8';","export const registerBoxQuery = () => {\r\n    return `\r\n        @media screen and (max-width: 500px) {\r\n            border: none;\r\n            box-shadow: none;\r\n            padding: 0;\r\n        }\r\n    `;\r\n}\r\n\r\nexport const addButtonQuery = () => {\r\n    return `\r\n        @media screen and (max-width: 576px) {\r\n            justify-content: flex-start;\r\n        }\r\n    `;\r\n}\r\n\r\nexport const layoutQuery = () => {\r\n    return `\r\n        @media screen and (min-width: 768px) {\r\n            margin-left: 25rem;\r\n        }\r\n    `;\r\n}\r\n\r\nexport const adminSiderQuery = () => {\r\n    return `\r\n        @media screen and (min-width: 768px) {\r\n            margin-left: 20rem;\r\n        }\r\n    `;\r\n}\r\n\r\nexport const productActionsQuery = () => {\r\n    return `\r\n        @media screen and (max-width: 1200px) {\r\n            &:not(:first-child) {\r\n                margin-bottom: 0;\r\n            }\r\n            margin-bottom: .5rem;\r\n        }\r\n    `;\r\n}\r\n\r\nexport const formSearchQuery = () => {\r\n    return `\r\n        @media screen and (min-width: 768px) {\r\n            margin-top: 1.3rem;\r\n        }\r\n    `;\r\n}\r\n\r\nexport const HomePreviewQuery = () => {\r\n    return `\r\n        @media screen and (max-width: 768px) {\r\n            font-size: 2rem;\r\n        }\r\n    `;\r\n}","import { \r\n    lightColor, \r\n    primaryColor, \r\n    primaryDarkColor \r\n} from './colors';\r\n\r\nexport const linkHover = () => {\r\n    return `\r\n        position: relative;\r\n        transition: transform .15s ease-in-out;\r\n        &::before {\r\n            content: '';\r\n            position: absolute;\r\n            z-index: -1;\r\n            top: 0;\r\n            right: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n            transform: scale(0);\r\n            background-color: ${lightColor};\r\n            border-radius: 3px;\r\n            transition: transform .15s ease-in-out;\r\n            transform-origin: center;\r\n        }\r\n        &:hover {\r\n            color: ${primaryColor};\r\n        }\r\n        &:hover::before {\r\n            transform: scale(1);\r\n            transform-origin: top right;\r\n        }\r\n        &:active {\r\n            transform: scale(.9);\r\n        }\r\n    `;\r\n}\r\n\r\nexport const headingStyle = () => {\r\n    return `\r\n        background-image: linear-gradient(\r\n            to right, \r\n            ${primaryColor}, \r\n            ${primaryDarkColor}\r\n        );\r\n        -webkit-background-clip: text;\r\n        background-clip: text;\r\n        color: transparent;\r\n        font-weight: 900;\r\n    `\r\n}\r\n\r\nexport const inputIcon = () => {\r\n    return `\r\n        position: relative;\r\n        span {\r\n            position: absolute;\r\n            top: 50%;\r\n            transform: translate(0%, -50%);\r\n            color: ${primaryColor};\r\n        }\r\n        input {\r\n            padding-left: 3rem;\r\n            border: .2rem solid;\r\n            border-color: transparent transparent #ddd transparent;\r\n            outline: none;\r\n            width: 100%;\r\n            height: 5rem;\r\n            background-color: #fff;\r\n            border-radius: 0;\r\n        }\r\n        strong {\r\n            &:after {\r\n                content: '';\r\n                position: absolute;\r\n                bottom: 0;\r\n                left: 50%;\r\n                width: 0;\r\n                height: .2rem;\r\n                background-color: ${primaryColor};\r\n                transition: all .3s ease-in-out;\r\n            }\r\n        }\r\n        input:focus + strong {\r\n            &:after {\r\n                width: 100%;\r\n                left: 0;\r\n            }\r\n        }\r\n    `;\r\n}\r\n\r\nexport const inputLabel = () => {\r\n    return `\r\n        label {\r\n            display: block;\r\n            color: #000;\r\n            font-weight: 500;\r\n            margin-bottom: .2rem;\r\n        }\r\n        input {\r\n            width: 100%;\r\n            outline: none;\r\n            height: 4rem;\r\n            padding-left: 1rem;\r\n            border: .1rem solid rgba(0 0 0 / 10%);\r\n            &:focus {\r\n                box-shadow: 0 0 .1rem .1rem ${primaryDarkColor};\r\n                border: .1rem solid ${primaryColor};\r\n                transition: all .15s cubic-bezier(0.25, 0.46, 0.45, 0.94);\r\n            }\r\n        }\r\n    `;\r\n}","import { useSelector } from 'react-redux';\r\n\r\nconst useUserHook = () => {\r\n    const { user } = useSelector(state => ({ ...state }));\r\n    const { userInfo } = user;\r\n\r\n    return { userInfo }\r\n}\r\n\r\nexport default useUserHook;","import message from 'antd/lib/message';\r\n\r\nconst successAlert = (msgText, duration = 10) => message.success({\r\n    content: msgText, \r\n    style: {\r\n        fontSize: '1.35rem',\r\n        color: '#262626',\r\n    },\r\n    duration: duration,\r\n});\r\n\r\nexport default successAlert;","export const defaultFontSize = '1.6rem';\r\nexport const descFontSize = '1.4rem';\r\nexport const mainHeadFontSize = '2.8rem';","import errorAlert from '../../components/layout/message/errorAlert';\r\n\r\nconst isFormEmpty = (email, password) => {\r\n    return !email || !password;\r\n}\r\n\r\nconst isValidPassword = password => {\r\n    if (password.length < 6) {\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport const isFormValid = (email, password) => {\r\n    if (isFormEmpty(email, password)) {\r\n        errorAlert('All fields are required', 3);\r\n    } else if (!isValidPassword(password)) {\r\n        errorAlert('Password must be at least 6 characters long', 3);\r\n    } else {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport const isEmailValid = email => {\r\n    if (!email) {\r\n        errorAlert('Please type your email address', 3);\r\n    } else {\r\n        return true;\r\n    }\r\n}","import styled from 'styled-components';\r\nimport { lightColor, primaryColor } from '../../themes/colors';\r\nimport { descFontSize } from '../../themes/fonts';\r\nimport { boxPadding, topSpace } from '../../themes/spaces';\r\nimport { headingStyle, linkHover } from '../../themes/mixins';\r\nimport { registerBoxQuery } from '../../themes/breakpoints';\r\n\r\n// @antd\r\nimport Typography from 'antd/lib/typography';\r\n\r\nconst {\r\n    Title,\r\n} = Typography;\r\n\r\n\r\nexport const ImageWrapper = styled.div`\r\n    height: 100vh;\r\n`;\r\n\r\nexport const StyledImg = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-image: ${props => props.location === '/register' ? \"url('/auth/register.svg')\" : \"url('/auth/login.svg')\"};\r\n    background-size: contain;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    position: relative;\r\n    clip-path: polygon(0 0, 100% 0, 100% 95vh, 0 100%);\r\n    background-color: ${primaryColor};\r\n`;\r\n\r\nexport const FormWrapper = styled.div`\r\n    height: 100%;\r\n    padding: ${topSpace} 0;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    padding: 0 2rem;\r\n`;\r\n\r\nexport const CompleteContent = styled.div`\r\n    padding: ${boxPadding};\r\n    background-color: #fff;\r\n    border: 1px solid #ddd;\r\n    box-shadow: 0 .5rem 1rem rgba(154,160,185,.05), 0 1.5rem 4rem rgba(166,173,201,.2);\r\n    ${registerBoxQuery};\r\n`;\r\n\r\nexport const StyledTitle = styled(Title)`\r\n    // for higher specifity;\r\n    // You can use as many & as you want, the more you use the higher the specificity will be!\r\n    && {\r\n        ${headingStyle};\r\n        margin-bottom: .5rem;\r\n    }\r\n`;\r\n\r\nexport const StyledForm = styled.form`\r\n    margin-top: 2.5rem;\r\n`;\r\n\r\nexport const InputControl = styled.div`\r\n    position: relative;\r\n    span {\r\n        position: absolute;\r\n        top: 50%;\r\n        transform: translate(50%, -50%);\r\n    }\r\n    &:not(:first-child) {\r\n        margin-top: 1rem;\r\n    }\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n    display: block;\r\n    width: 100%;\r\n    height: 5rem;\r\n    padding-left: 3rem;\r\n    margin-bottom: 1.5rem;\r\n    outline: none;\r\n    border: 1px solid #ddd;\r\n    background-color: #fff;\r\n    font-size: ${descFontSize};\r\n    transition: all .15s ease;\r\n    &:focus {\r\n        border-color: ${primaryColor};\r\n        box-shadow: 0 0 .5rem .1rem ${primaryColor};\r\n    }\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n    padding: 1rem 3rem;\r\n    border: none;\r\n    cursor: pointer;\r\n    outline: none;\r\n    z-index: 1;\r\n    ${linkHover};\r\n    &::before {\r\n        background-color: ${primaryColor};\r\n    }\r\n    &:hover {\r\n        color: ${lightColor};\r\n    }\r\n`;\r\n\r\nexport const StyledActions = styled.div`\r\n    margin-top: 1.5rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n`;","import { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useUserHook from './useUserHook';\r\n\r\nconst useProtectRoute = () => {\r\n    const history = useHistory();\r\n    const { userInfo } = useUserHook();\r\n\r\n    useEffect(() => {\r\n        let intended = history.location.state;\r\n\r\n        if (intended) {\r\n            return;\r\n        } else {\r\n            if (userInfo?.token) history.push('/');\r\n        }\r\n    }, [userInfo, history]);\r\n}\r\n\r\nexport default useProtectRoute;"],"sourceRoot":""}